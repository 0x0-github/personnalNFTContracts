/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestMoonBase, TestMoonBaseInterface } from "../TestMoonBase";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mlz",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotClaim",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientETHValue",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxMintTxReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MintOut",
    type: "error",
  },
  {
    inputs: [],
    name: "MintPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTokenOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "UpdatedCurrentClaimId",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "UpdatedCurrentMintId",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "last",
        type: "uint256",
      },
    ],
    name: "UpdatedLastClaimId",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "last",
        type: "uint256",
      },
    ],
    name: "UpdatedLastMintId",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "UpdatedMaxMintTx",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "UpdatedMintPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "UpdatedMintPrice",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mlzId",
        type: "uint256",
      },
    ],
    name: "canClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentClaimId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentMintId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastClaimId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastMintId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batches",
        type: "uint256",
      },
    ],
    name: "mintBatches",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mlz",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "updateCurrentClaimId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "updateCurrentMintId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "updateLastClaimId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "updateLastMintId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "updateMaxMintTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "updateMintPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "updateMintPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "withdrawNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405261058b600355611ecd600555669c51c4521e000060065560036007553480156200002d57600080fd5b5060405162001abd38038062001abd83398181016040528101906200005391906200019e565b6200007362000067620000bb60201b60201c565b620000c360201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000223565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001988162000209565b92915050565b600060208284031215620001b757620001b662000204565b5b6000620001c78482850162000187565b91505092915050565b6000620001dd82620001e4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200021481620001d0565b81146200022057600080fd5b50565b61188a80620002336000396000f3fe6080604052600436106101695760003560e01c806372806c5a116100d1578063b7ed19391161008a578063c95c0d8911610064578063c95c0d89146104d9578063dfa5cc5914610516578063ec8afd491461053f578063f2fde38b1461056857610170565b8063b7ed19391461045c578063b841be2314610487578063c7d0db04146104b057610170565b806372806c5a1461036b57806373b6abd5146103965780637e4831d3146103c15780638da5cb5b146103ec578063a0712d6814610417578063b6d0c57a1461043357610170565b80635dd871a3116101235780635dd871a31461026d57806363869a5d146102aa5780636817c76c146102d55780636ba4c138146103005780637119ca7614610329578063715018a61461035457610170565b8062728e4614610175578063023245d71461019e5780632e1a7d4d146101c75780633204ea70146101f057806336d2c7321461021957806346d7f1e91461024457610170565b3661017057005b600080fd5b34801561018157600080fd5b5061019c600480360381019061019791906113fd565b610591565b005b3480156101aa57600080fd5b506101c560048036038101906101c091906113fd565b6105da565b005b3480156101d357600080fd5b506101ee60048036038101906101e991906113fd565b610698565b005b3480156101fc57600080fd5b50610217600480360381019061021291906113fd565b610772565b005b34801561022557600080fd5b5061022e6107bb565b60405161023b91906114f8565b60405180910390f35b34801561025057600080fd5b5061026b600480360381019061026691906113fd565b6107e1565b005b34801561027957600080fd5b50610294600480360381019061028f91906113fd565b61082a565b6040516102a1919061154a565b60405180910390f35b3480156102b657600080fd5b506102bf610846565b6040516102cc91906115c5565b60405180910390f35b3480156102e157600080fd5b506102ea61084c565b6040516102f791906115c5565b60405180910390f35b34801561030c57600080fd5b5061032760048036038101906103229190611383565b610852565b005b34801561033557600080fd5b5061033e610aff565b60405161034b91906115c5565b60405180910390f35b34801561036057600080fd5b50610369610b05565b005b34801561037757600080fd5b50610380610b19565b60405161038d91906115c5565b60405180910390f35b3480156103a257600080fd5b506103ab610b1f565b6040516103b891906115c5565b60405180910390f35b3480156103cd57600080fd5b506103d6610b25565b6040516103e3919061154a565b60405180910390f35b3480156103f857600080fd5b50610401610b38565b60405161040e91906114f8565b60405180910390f35b610431600480360381019061042c91906113fd565b610b61565b005b34801561043f57600080fd5b5061045a600480360381019061045591906113fd565b610d43565b005b34801561046857600080fd5b50610471610d8c565b60405161047e91906115c5565b60405180910390f35b34801561049357600080fd5b506104ae60048036038101906104a991906113fd565b610d92565b005b3480156104bc57600080fd5b506104d760048036038101906104d291906113d0565b610ea9565b005b3480156104e557600080fd5b5061050060048036038101906104fb91906113fd565b610f05565b60405161050d919061154a565b60405180910390f35b34801561052257600080fd5b5061053d600480360381019061053891906113fd565b61101f565b005b34801561054b57600080fd5b50610566600480360381019061056191906113fd565b611068565b005b34801561057457600080fd5b5061058f600480360381019061058a9190611329565b6110b1565b005b610599611135565b806006819055507f690d1299f6e59c30720e57776fb01ddda93e0df96db93773ca910836d2693fb6816040516105cf91906115c5565b60405180910390a150565b6105e2611135565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b815260040161066393929190611513565b600060405180830381600087803b15801561067d57600080fd5b505af1158015610691573d6000803e3d6000fd5b5050505050565b6106a0611135565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516106e8906114e3565b60006040518083038185875af1925050503d8060008114610725576040519150601f19603f3d011682016040523d82523d6000602084013e61072a565b606091505b505090508061076e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610765906115a5565b60405180910390fd5b5050565b61077a611135565b806004819055507f72f2d88d1800a098b0a0b585cfece3a8ffd7ca63b23842390721338c9db74753816040516107b091906115c5565b60405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107e9611135565b806003819055507f4c75e347daf9c4e98095dd098a5f8243ab0d8818b206a8cdb66a86fa566790cc8160405161081f91906115c5565b60405180910390a150565b60006005548260045461083d91906115fc565b11159050919050565b60075481565b60065481565b60008282905090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060005b82811015610ab15760008585838181106108a1576108a0611723565b5b9050602002013590506003548111806108d757506009600082815260200190815260200160002060009054906101000a900460ff165b1561090e576040517fe3e3d24200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161095e91906115c5565b60206040518083038186803b15801561097657600080fd5b505afa15801561098a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ae9190611356565b73ffffffffffffffffffffffffffffffffffffffff16146109fb576040517f59dc379f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016009600083815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff166323b872dd303385600254610a5391906115fc565b6040518463ffffffff1660e01b8152600401610a7193929190611513565b600060405180830381600087803b158015610a8b57600080fd5b505af1158015610a9f573d6000803e3d6000fd5b50505050818060010192505050610884565b50816002600082825401925050819055507f7a355715549cfe7c1cba26304350343fbddc4b4f72d3ce3e7c27117dd20b5cb882604051610af191906115c5565b60405180910390a150505050565b60035481565b610b0d611135565b610b1760006111b3565b565b60025481565b60045481565b600860009054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060065482610b969190611652565b3414610bce576040517f7779fcc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600754821115610c0a576040517f584e10cd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055482600454610c1b91906115fc565b1115610c53576040517f44e3a8d600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600860009054906101000a900460ff1615610c9a576040517fd7d248ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82811015610d2e578173ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600454610cd191906115fc565b6040518463ffffffff1660e01b8152600401610cef93929190611513565b600060405180830381600087803b158015610d0957600080fd5b505af1158015610d1d573d6000803e3d6000fd5b505050508080600101915050610c9d565b50816004600082825401925050819055505050565b610d4b611135565b806002819055507f5852b707642c723001e41ce9d61b1db6f6432cc4dd53290126004a4d40c9359881604051610d8191906115c5565b60405180910390a150565b60055481565b610d9a611135565b600060016003610daa9190611652565b905060008183610dba9190611652565b905080471015610df6576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060005b84811015610ea2578173ffffffffffffffffffffffffffffffffffffffff16638ca887ca8560036040518363ffffffff1660e01b8152600401610e6391906115c5565b6000604051808303818588803b158015610e7c57600080fd5b505af1158015610e90573d6000803e3d6000fd5b50505050508080600101915050610e20565b5050505050565b610eb1611135565b80600860006101000a81548160ff0219169083151502179055507f7418ab57b2b06eaefb5196d86245043c50feba75241227e087e10bda500d189381604051610efa919061154a565b60405180910390a150565b60003373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401610f7991906115c5565b60206040518083038186803b158015610f9157600080fd5b505afa158015610fa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc99190611356565b73ffffffffffffffffffffffffffffffffffffffff161480156110185750600354821115801561101757506009600083815260200190815260200160002060009054906101000a900460ff16155b5b9050919050565b611027611135565b806007819055507fff6dcf1d4c545edfc45a079b717b2115bdfdd7689f55aebbce6d7593e5a716af8160405161105d91906115c5565b60405180910390a150565b611070611135565b806005819055507f1560e3ca82bb0fab40af335ef1c7bf5d94118d31c2c00f286c8c4e2a16d3a733816040516110a691906115c5565b60405180910390a150565b6110b9611135565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611129576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112090611565565b60405180910390fd5b611132816111b3565b50565b61113d611277565b73ffffffffffffffffffffffffffffffffffffffff1661115b610b38565b73ffffffffffffffffffffffffffffffffffffffff16146111b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a890611585565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061128e8161180f565b92915050565b6000815190506112a38161180f565b92915050565b60008083601f8401126112bf576112be611757565b5b8235905067ffffffffffffffff8111156112dc576112db611752565b5b6020830191508360208202830111156112f8576112f761175c565b5b9250929050565b60008135905061130e81611826565b92915050565b6000813590506113238161183d565b92915050565b60006020828403121561133f5761133e611766565b5b600061134d8482850161127f565b91505092915050565b60006020828403121561136c5761136b611766565b5b600061137a84828501611294565b91505092915050565b6000806020838503121561139a57611399611766565b5b600083013567ffffffffffffffff8111156113b8576113b7611761565b5b6113c4858286016112a9565b92509250509250929050565b6000602082840312156113e6576113e5611766565b5b60006113f4848285016112ff565b91505092915050565b60006020828403121561141357611412611766565b5b600061142184828501611314565b91505092915050565b611433816116ac565b82525050565b611442816116be565b82525050565b60006114556026836115eb565b91506114608261176b565b604082019050919050565b60006114786020836115eb565b9150611483826117ba565b602082019050919050565b600061149b6000836115e0565b91506114a6826117e3565b600082019050919050565b60006114be6010836115eb565b91506114c9826117e6565b602082019050919050565b6114dd816116ea565b82525050565b60006114ee8261148e565b9150819050919050565b600060208201905061150d600083018461142a565b92915050565b6000606082019050611528600083018661142a565b611535602083018561142a565b61154260408301846114d4565b949350505050565b600060208201905061155f6000830184611439565b92915050565b6000602082019050818103600083015261157e81611448565b9050919050565b6000602082019050818103600083015261159e8161146b565b9050919050565b600060208201905081810360008301526115be816114b1565b9050919050565b60006020820190506115da60008301846114d4565b92915050565b600081905092915050565b600082825260208201905092915050565b6000611607826116ea565b9150611612836116ea565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611647576116466116f4565b5b828201905092915050565b600061165d826116ea565b9150611668836116ea565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116a1576116a06116f4565b5b828202905092915050565b60006116b7826116ca565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b50565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b611818816116ac565b811461182357600080fd5b50565b61182f816116be565b811461183a57600080fd5b50565b611846816116ea565b811461185157600080fd5b5056fea2646970667358221220ee1d21eb5515dcc48a5ab468f1a4ac96a169f264fedd9240373c72fe7d2a24e064736f6c63430008070033";

type TestMoonBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestMoonBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestMoonBase__factory extends ContractFactory {
  constructor(...args: TestMoonBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TestMoonBase";
  }

  deploy(
    _mlz: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestMoonBase> {
    return super.deploy(_mlz, overrides || {}) as Promise<TestMoonBase>;
  }
  getDeployTransaction(
    _mlz: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_mlz, overrides || {});
  }
  attach(address: string): TestMoonBase {
    return super.attach(address) as TestMoonBase;
  }
  connect(signer: Signer): TestMoonBase__factory {
    return super.connect(signer) as TestMoonBase__factory;
  }
  static readonly contractName: "TestMoonBase";
  public readonly contractName: "TestMoonBase";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestMoonBaseInterface {
    return new utils.Interface(_abi) as TestMoonBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestMoonBase {
    return new Contract(address, _abi, signerOrProvider) as TestMoonBase;
  }
}
