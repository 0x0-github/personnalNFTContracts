/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FreeClaim, FreeClaimInterface } from "../FreeClaim";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "moonBaseAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "mlzAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotClaim",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "MerkleRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "destruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "freeClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "giveBackOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "ownerMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c4438038062001c448339818101604052810190620000379190620001c4565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200025e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001be8162000244565b92915050565b60008060408385031215620001de57620001dd6200023f565b5b6000620001ee85828601620001ad565b92505060206200020185828601620001ad565b9150509250929050565b600062000218826200021f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200024f816200020b565b81146200025b57600080fd5b50565b6119d6806200026e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063753aeeeb11610066578063753aeeeb146100e65780637cb64759146101025780638da5cb5b1461011e5780639293a4a71461013c578063f2fde38b1461014657610093565b80632b68b9c6146100985780632eb4a7ab146100a25780634d588a91146100c0578063715018a6146100dc575b600080fd5b6100a0610162565b005b6100aa610183565b6040516100b791906116c1565b60405180910390f35b6100da60048036038101906100d591906114d3565b610189565b005b6100e4610834565b005b61010060048036038101906100fb919061145f565b610848565b005b61011c60048036038101906101179190611405565b610f3f565b005b610126610f88565b6040516101339190611654565b60405180910390f35b610144610fb1565b005b610160600480360381019061015b91906113ab565b611048565b005b61016a6110cc565b3373ffffffffffffffffffffffffffffffffffffffff16ff5b60035481565b6101916110cc565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4831d36040518163ffffffff1660e01b815260040160206040518083038186803b1580156101fb57600080fd5b505afa15801561020f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023391906113d8565b905080156102ca57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c7d0db0460006040518263ffffffff1660e01b815260040161029791906116a6565b600060405180830381600087803b1580156102b157600080fd5b505af11580156102c5573d6000803e3d6000fd5b505050505b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636817c76c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561033457600080fd5b505afa158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c9190611432565b9050600081111561040557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662728e4660006040518263ffffffff1660e01b81526004016103d291906116dc565b600060405180830381600087803b1580156103ec57600080fd5b505af1158015610400573d6000803e3d6000fd5b505050505b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166373b6abd56040518163ffffffff1660e01b815260040160206040518083038186803b15801561046f57600080fd5b505afa158015610483573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a79190611432565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633204ea70876040518263ffffffff1660e01b81526004016105049190611737565b600060405180830381600087803b15801561051e57600080fd5b505af1158015610532573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0712d68866040518263ffffffff1660e01b81526004016105919190611737565b600060405180830381600087803b1580156105ab57600080fd5b505af11580156105bf573d6000803e3d6000fd5b505050506000805b86811015610672578088019150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3088856040518463ffffffff1660e01b81526004016106339392919061166f565b600060405180830381600087803b15801561064d57600080fd5b505af1158015610661573d6000803e3d6000fd5b5050505080806001019150506105c7565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633204ea70836040518263ffffffff1660e01b81526004016106ce9190611737565b600060405180830381600087803b1580156106e857600080fd5b505af11580156106fc573d6000803e3d6000fd5b50505050831561079557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c7d0db0460016040518263ffffffff1660e01b815260040161076291906116a6565b600060405180830381600087803b15801561077c57600080fd5b505af1158015610790573d6000803e3d6000fd5b505050505b600083111561082b57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662728e46846040518263ffffffff1660e01b81526004016107f89190611737565b600060405180830381600087803b15801561081257600080fd5b505af1158015610826573d6000803e3d6000fd5b505050505b50505050505050565b61083c6110cc565b610846600061114a565b565b61089f828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060035461089a338861120e565b611241565b6108d5576040517fe3e3d24200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600354336040516020016108ec929190611628565b6040516020818303038152906040528051906020012090506004600082815260200190815260200160002060009054906101000a900460ff161561095c576040517f646cf55800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4831d36040518163ffffffff1660e01b815260040160206040518083038186803b1580156109c657600080fd5b505afa1580156109da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fe91906113d8565b90508015610a9557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c7d0db0460006040518263ffffffff1660e01b8152600401610a6291906116a6565b600060405180830381600087803b158015610a7c57600080fd5b505af1158015610a90573d6000803e3d6000fd5b505050505b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636817c76c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610aff57600080fd5b505afa158015610b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b379190611432565b90506000811115610bd057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662728e4660006040518263ffffffff1660e01b8152600401610b9d91906116dc565b600060405180830381600087803b158015610bb757600080fd5b505af1158015610bcb573d6000803e3d6000fd5b505050505b60016004600085815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166373b6abd56040518163ffffffff1660e01b815260040160206040518083038186803b158015610c6657600080fd5b505afa158015610c7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9e9190611432565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0712d68896040518263ffffffff1660e01b8152600401610cfb9190611737565b600060405180830381600087803b158015610d1557600080fd5b505af1158015610d29573d6000803e3d6000fd5b505050506000805b89811015610ddc578083019150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd308b856040518463ffffffff1660e01b8152600401610d9d9392919061166f565b600060405180830381600087803b158015610db757600080fd5b505af1158015610dcb573d6000803e3d6000fd5b505050508080600101915050610d31565b508315610e7257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c7d0db0460016040518263ffffffff1660e01b8152600401610e3f91906116a6565b600060405180830381600087803b158015610e5957600080fd5b505af1158015610e6d573d6000803e3d6000fd5b505050505b6000831115610f0857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662728e46846040518263ffffffff1660e01b8152600401610ed59190611737565b600060405180830381600087803b158015610eef57600080fd5b505af1158015610f03573d6000803e3d6000fd5b505050505b7fbcb472984264b16baa8cde752f2af002ea8ce06f35d81caee36625234edd2a4660405160405180910390a1505050505050505050565b610f476110cc565b806003819055507f90004c04698bc3322499a575ed3752dd4abf33e0a7294c06a787a0fe01bea94181604051610f7d91906116c1565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610fb96110cc565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b336040518263ffffffff1660e01b81526004016110149190611654565b600060405180830381600087803b15801561102e57600080fd5b505af1158015611042573d6000803e3d6000fd5b50505050565b6110506110cc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b7906116f7565b60405180910390fd5b6110c98161114a565b50565b6110d4611258565b73ffffffffffffffffffffffffffffffffffffffff166110f2610f88565b73ffffffffffffffffffffffffffffffffffffffff1614611148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113f90611717565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600082826040516020016112239291906115fc565b60405160208183030381529060405280519060200120905092915050565b60008261124e8584611260565b1490509392505050565b600033905090565b60008082905060005b84518110156112ca57600085828151811061128757611286611877565b5b602002602001015190508083116112a9576112a283826112d5565b92506112b6565b6112b381846112d5565b92505b5080806112c2906117c7565b915050611269565b508091505092915050565b600082600052816020526040600020905092915050565b6000813590506112fb81611944565b92915050565b60008083601f840112611317576113166118ab565b5b8235905067ffffffffffffffff811115611334576113336118a6565b5b6020830191508360208202830111156113505761134f6118b0565b5b9250929050565b6000815190506113668161195b565b92915050565b60008135905061137b81611972565b92915050565b60008135905061139081611989565b92915050565b6000815190506113a581611989565b92915050565b6000602082840312156113c1576113c06118ba565b5b60006113cf848285016112ec565b91505092915050565b6000602082840312156113ee576113ed6118ba565b5b60006113fc84828501611357565b91505092915050565b60006020828403121561141b5761141a6118ba565b5b60006114298482850161136c565b91505092915050565b600060208284031215611448576114476118ba565b5b600061145684828501611396565b91505092915050565b60008060008060608587031215611479576114786118ba565b5b600061148787828801611381565b9450506020611498878288016112ec565b935050604085013567ffffffffffffffff8111156114b9576114b86118b5565b5b6114c587828801611301565b925092505092959194509250565b6000806000606084860312156114ec576114eb6118ba565b5b60006114fa86828701611381565b935050602061150b86828701611381565b925050604061151c868287016112ec565b9150509250925092565b61152f81611763565b82525050565b61154661154182611763565b611810565b82525050565b61155581611775565b82525050565b61156481611781565b82525050565b61157b61157682611781565b611822565b82525050565b61158a816117b5565b82525050565b600061159d602683611752565b91506115a8826118cc565b604082019050919050565b60006115c0602083611752565b91506115cb8261191b565b602082019050919050565b6115df816117ab565b82525050565b6115f66115f1826117ab565b61183e565b82525050565b60006116088285611535565b60148201915061161882846115e5565b6020820191508190509392505050565b6000611634828561156a565b6020820191506116448284611535565b6014820191508190509392505050565b60006020820190506116696000830184611526565b92915050565b60006060820190506116846000830186611526565b6116916020830185611526565b61169e60408301846115d6565b949350505050565b60006020820190506116bb600083018461154c565b92915050565b60006020820190506116d6600083018461155b565b92915050565b60006020820190506116f16000830184611581565b92915050565b6000602082019050818103600083015261171081611590565b9050919050565b60006020820190508181036000830152611730816115b3565b9050919050565b600060208201905061174c60008301846115d6565b92915050565b600082825260208201905092915050565b600061176e8261178b565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006117c0826117ab565b9050919050565b60006117d2826117ab565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561180557611804611848565b5b600182019050919050565b600061181b8261182c565b9050919050565b6000819050919050565b6000611837826118bf565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008160601b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61194d81611763565b811461195857600080fd5b50565b61196481611775565b811461196f57600080fd5b50565b61197b81611781565b811461198657600080fd5b50565b611992816117ab565b811461199d57600080fd5b5056fea2646970667358221220dacadda635528fc9725cf40aab62f5ff98d60a833e50c56498428fec7c7bb3e664736f6c63430008070033";

type FreeClaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FreeClaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FreeClaim__factory extends ContractFactory {
  constructor(...args: FreeClaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FreeClaim";
  }

  deploy(
    moonBaseAddr: string,
    mlzAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FreeClaim> {
    return super.deploy(
      moonBaseAddr,
      mlzAddr,
      overrides || {}
    ) as Promise<FreeClaim>;
  }
  getDeployTransaction(
    moonBaseAddr: string,
    mlzAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(moonBaseAddr, mlzAddr, overrides || {});
  }
  attach(address: string): FreeClaim {
    return super.attach(address) as FreeClaim;
  }
  connect(signer: Signer): FreeClaim__factory {
    return super.connect(signer) as FreeClaim__factory;
  }
  static readonly contractName: "FreeClaim";
  public readonly contractName: "FreeClaim";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FreeClaimInterface {
    return new utils.Interface(_abi) as FreeClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FreeClaim {
    return new Contract(address, _abi, signerOrProvider) as FreeClaim;
  }
}
