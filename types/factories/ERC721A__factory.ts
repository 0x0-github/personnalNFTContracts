/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721A, ERC721AInterface } from "../ERC721A";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d7e38038062001d7e8339818101604052810190620000379190620001ba565b81600290805190602001906200004f9291906200008c565b508060039080519060200190620000689291906200008c565b50620000796200008760201b60201c565b6000819055505050620003c3565b600090565b8280546200009a90620002d4565b90600052602060002090601f016020900481019282620000be57600085556200010a565b82601f10620000d957805160ff19168380011785556200010a565b828001600101855582156200010a579182015b8281111562000109578251825591602001919060010190620000ec565b5b5090506200011991906200011d565b5090565b5b80821115620001385760008160009055506001016200011e565b5090565b6000620001536200014d8462000268565b6200023f565b905082815260208101848484011115620001725762000171620003a3565b5b6200017f8482856200029e565b509392505050565b600082601f8301126200019f576200019e6200039e565b5b8151620001b18482602086016200013c565b91505092915050565b60008060408385031215620001d457620001d3620003ad565b5b600083015167ffffffffffffffff811115620001f557620001f4620003a8565b5b620002038582860162000187565b925050602083015167ffffffffffffffff811115620002275762000226620003a8565b5b620002358582860162000187565b9150509250929050565b60006200024b6200025e565b90506200025982826200030a565b919050565b6000604051905090565b600067ffffffffffffffff8211156200028657620002856200036f565b5b6200029182620003b2565b9050602081019050919050565b60005b83811015620002be578082015181840152602081019050620002a1565b83811115620002ce576000848401525b50505050565b60006002820490506001821680620002ed57607f821691505b6020821081141562000304576200030362000340565b5b50919050565b6200031582620003b2565b810181811067ffffffffffffffff821117156200033757620003366200036f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6119ab80620003d36000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806318160ddd1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906114aa565b6102f5565b604051610116919061168c565b60405180910390f35b610127610387565b60405161013491906116a7565b60405180910390f35b61015760048036038101906101529190611504565b610419565b6040516101649190611625565b60405180910390f35b6101876004803603810190610182919061146a565b610495565b005b6101916105d6565b60405161019e91906116c9565b60405180910390f35b6101c160048036038101906101bc9190611354565b6105ed565b005b6101dd60048036038101906101d89190611354565b6105fd565b005b6101f960048036038101906101f49190611504565b61061d565b6040516102069190611625565b60405180910390f35b610229600480360381019061022491906112e7565b61062f565b60405161023691906116c9565b60405180910390f35b6102476106e8565b60405161025491906116a7565b60405180910390f35b6102776004803603810190610272919061142a565b61077a565b005b610293600480360381019061028e91906113a7565b6108f2565b005b6102af60048036038101906102aa9190611504565b610965565b6040516102bc91906116a7565b60405180910390f35b6102df60048036038101906102da9190611314565b610a04565b6040516102ec919061168c565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061035057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103805750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461039690611833565b80601f01602080910402602001604051908101604052809291908181526020018280546103c290611833565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b5050505050905090565b600061042482610a98565b61045a576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104a08261061d565b90508073ffffffffffffffffffffffffffffffffffffffff166104c1610af7565b73ffffffffffffffffffffffffffffffffffffffff1614610524576104ed816104e8610af7565b610a04565b610523576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006105e0610aff565b6001546000540303905090565b6105f8838383610b04565b505050565b610618838383604051806020016040528060008152506108f2565b505050565b600061062882610eec565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610697576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b6060600380546106f790611833565b80601f016020809104026020016040519081016040528092919081815260200182805461072390611833565b80156107705780601f1061074557610100808354040283529160200191610770565b820191906000526020600020905b81548152906001019060200180831161075357829003601f168201915b5050505050905090565b610782610af7565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107e7576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600760006107f4610af7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166108a1610af7565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516108e6919061168c565b60405180910390a35050565b6108fd848484610b04565b60008373ffffffffffffffffffffffffffffffffffffffff163b1461095f5761092884848484610fba565b61095e576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b606061097082610a98565b6109a6576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109b061111a565b90506000815114156109d157604051806020016040528060008152506109fc565b806109db84611131565b6040516020016109ec929190611601565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610aa3610aff565b11158015610ab2575060005482105b8015610af0575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b6000610b0f82610eec565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b76576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006006600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008573ffffffffffffffffffffffffffffffffffffffff16610bcf610af7565b73ffffffffffffffffffffffffffffffffffffffff161480610bfe5750610bfd86610bf8610af7565b610a04565b5b80610c3b5750610c0c610af7565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b905080610c74576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610cdb576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ce8868686600161118b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610d2657610d2584611191565b5b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905550610df485610dd08888876111ad565b7c0200000000000000000000000000000000000000000000000000000000176111d4565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084161415610e7c576000600185019050600060046000838152602001908152602001600020541415610e7a576000548114610e79578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610ee486868660016111ff565b505050505050565b60008082905080610efb610aff565b11610f8357600054811015610f825760006004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415610f80575b6000811415610f76576004600083600190039350838152602001908152602001600020549050610f4b565b8092505050610fb5565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fe0610af7565b8786866040518563ffffffff1660e01b81526004016110029493929190611640565b602060405180830381600087803b15801561101c57600080fd5b505af192505050801561104d57506040513d601f19601f8201168201806040525081019061104a91906114d7565b60015b6110c7573d806000811461107d576040519150601f19603f3d011682016040523d82523d6000602084013e611082565b606091505b506000815114156110bf576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606080604051019050806040528082600183039250600a81066030018353600a810490505b801561117757600183039250600a81066030018353600a81049050611157565b508181036020830392508083525050919050565b50505050565b6000600690508160005280602052604060002060008155505050565b6000808260e81c905060e86111c3868684611205565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60009392505050565b600061122161121c84611709565b6116e4565b90508281526020810184848401111561123d5761123c6118f9565b5b6112488482856117f1565b509392505050565b60008135905061125f81611919565b92915050565b60008135905061127481611930565b92915050565b60008135905061128981611947565b92915050565b60008151905061129e81611947565b92915050565b600082601f8301126112b9576112b86118f4565b5b81356112c984826020860161120e565b91505092915050565b6000813590506112e18161195e565b92915050565b6000602082840312156112fd576112fc611903565b5b600061130b84828501611250565b91505092915050565b6000806040838503121561132b5761132a611903565b5b600061133985828601611250565b925050602061134a85828601611250565b9150509250929050565b60008060006060848603121561136d5761136c611903565b5b600061137b86828701611250565b935050602061138c86828701611250565b925050604061139d868287016112d2565b9150509250925092565b600080600080608085870312156113c1576113c0611903565b5b60006113cf87828801611250565b94505060206113e087828801611250565b93505060406113f1878288016112d2565b925050606085013567ffffffffffffffff811115611412576114116118fe565b5b61141e878288016112a4565b91505092959194509250565b6000806040838503121561144157611440611903565b5b600061144f85828601611250565b925050602061146085828601611265565b9150509250929050565b6000806040838503121561148157611480611903565b5b600061148f85828601611250565b92505060206114a0858286016112d2565b9150509250929050565b6000602082840312156114c0576114bf611903565b5b60006114ce8482850161127a565b91505092915050565b6000602082840312156114ed576114ec611903565b5b60006114fb8482850161128f565b91505092915050565b60006020828403121561151a57611519611903565b5b6000611528848285016112d2565b91505092915050565b61153a8161177d565b82525050565b6115498161178f565b82525050565b600061155a8261173a565b6115648185611750565b9350611574818560208601611800565b61157d81611908565b840191505092915050565b600061159382611745565b61159d8185611761565b93506115ad818560208601611800565b6115b681611908565b840191505092915050565b60006115cc82611745565b6115d68185611772565b93506115e6818560208601611800565b80840191505092915050565b6115fb816117e7565b82525050565b600061160d82856115c1565b915061161982846115c1565b91508190509392505050565b600060208201905061163a6000830184611531565b92915050565b60006080820190506116556000830187611531565b6116626020830186611531565b61166f60408301856115f2565b8181036060830152611681818461154f565b905095945050505050565b60006020820190506116a16000830184611540565b92915050565b600060208201905081810360008301526116c18184611588565b905092915050565b60006020820190506116de60008301846115f2565b92915050565b60006116ee6116ff565b90506116fa8282611865565b919050565b6000604051905090565b600067ffffffffffffffff821115611724576117236118c5565b5b61172d82611908565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611788826117c7565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561181e578082015181840152602081019050611803565b8381111561182d576000848401525b50505050565b6000600282049050600182168061184b57607f821691505b6020821081141561185f5761185e611896565b5b50919050565b61186e82611908565b810181811067ffffffffffffffff8211171561188d5761188c6118c5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6119228161177d565b811461192d57600080fd5b50565b6119398161178f565b811461194457600080fd5b50565b6119508161179b565b811461195b57600080fd5b50565b611967816117e7565b811461197257600080fd5b5056fea26469706673582212206164e3564a1cef7ab81c74200a9fcaf71f16d5a6bc97d23040026c8712e177a964736f6c63430008070033";

type ERC721AConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721A__factory extends ContractFactory {
  constructor(...args: ERC721AConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC721A";
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721A> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721A>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ERC721A {
    return super.attach(address) as ERC721A;
  }
  connect(signer: Signer): ERC721A__factory {
    return super.connect(signer) as ERC721A__factory;
  }
  static readonly contractName: "ERC721A";
  public readonly contractName: "ERC721A";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AInterface {
    return new utils.Interface(_abi) as ERC721AInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721A {
    return new Contract(address, _abi, signerOrProvider) as ERC721A;
  }
}
