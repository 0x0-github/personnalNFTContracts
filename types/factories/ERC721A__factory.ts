/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721A, ERC721AInterface } from "../ERC721A";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f7438038062001f7483398181016040528101906200003791906200021b565b8160029081620000489190620004eb565b5080600390816200005a9190620004eb565b506200006b6200007960201b60201c565b6000819055505050620005d2565b600090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000e7826200009c565b810181811067ffffffffffffffff82111715620001095762000108620000ad565b5b80604052505050565b60006200011e6200007e565b90506200012c8282620000dc565b919050565b600067ffffffffffffffff8211156200014f576200014e620000ad565b5b6200015a826200009c565b9050602081019050919050565b60005b83811015620001875780820151818401526020810190506200016a565b8381111562000197576000848401525b50505050565b6000620001b4620001ae8462000131565b62000112565b905082815260208101848484011115620001d357620001d262000097565b5b620001e084828562000167565b509392505050565b600082601f8301126200020057620001ff62000092565b5b8151620002128482602086016200019d565b91505092915050565b6000806040838503121562000235576200023462000088565b5b600083015167ffffffffffffffff8111156200025657620002556200008d565b5b6200026485828601620001e8565b925050602083015167ffffffffffffffff8111156200028857620002876200008d565b5b6200029685828601620001e8565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002f357607f821691505b602082108103620003095762000308620002ab565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000334565b6200037f868362000334565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003cc620003c6620003c08462000397565b620003a1565b62000397565b9050919050565b6000819050919050565b620003e883620003ab565b62000400620003f782620003d3565b84845462000341565b825550505050565b600090565b6200041762000408565b62000424818484620003dd565b505050565b5b818110156200044c57620004406000826200040d565b6001810190506200042a565b5050565b601f8211156200049b5762000465816200030f565b620004708462000324565b8101602085101562000480578190505b620004986200048f8562000324565b83018262000429565b50505b505050565b600082821c905092915050565b6000620004c060001984600802620004a0565b1980831691505092915050565b6000620004db8383620004ad565b9150826002028217905092915050565b620004f682620002a0565b67ffffffffffffffff811115620005125762000511620000ad565b5b6200051e8254620002da565b6200052b82828562000450565b600060209050601f8311600181146200056357600084156200054e578287015190505b6200055a8582620004cd565b865550620005ca565b601f19841662000573866200030f565b60005b828110156200059d5784890151825560018201915060208501945060208101905062000576565b86831015620005bd5784890151620005b9601f891682620004ad565b8355505b6001600288020188555050505b505050505050565b61199280620005e26000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806318160ddd1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b61010960048036038101906101049190611262565b6102f5565b60405161011691906112aa565b60405180910390f35b610127610387565b604051610134919061135e565b60405180910390f35b610157600480360381019061015291906113b6565b610419565b6040516101649190611424565b60405180910390f35b6101876004803603810190610182919061146b565b610495565b005b6101916105d6565b60405161019e91906114ba565b60405180910390f35b6101c160048036038101906101bc91906114d5565b6105ed565b005b6101dd60048036038101906101d891906114d5565b6105fd565b005b6101f960048036038101906101f491906113b6565b61061d565b6040516102069190611424565b60405180910390f35b61022960048036038101906102249190611528565b61062f565b60405161023691906114ba565b60405180910390f35b6102476106e7565b604051610254919061135e565b60405180910390f35b61027760048036038101906102729190611581565b610779565b005b610293600480360381019061028e91906116f6565b6108f0565b005b6102af60048036038101906102aa91906113b6565b610963565b6040516102bc919061135e565b60405180910390f35b6102df60048036038101906102da9190611779565b610a01565b6040516102ec91906112aa565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061035057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103805750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b606060028054610396906117e8565b80601f01602080910402602001604051908101604052809291908181526020018280546103c2906117e8565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b5050505050905090565b600061042482610a95565b61045a576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104a08261061d565b90508073ffffffffffffffffffffffffffffffffffffffff166104c1610af4565b73ffffffffffffffffffffffffffffffffffffffff1614610524576104ed816104e8610af4565b610a01565b610523576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006105e0610afc565b6001546000540303905090565b6105f8838383610b01565b505050565b610618838383604051806020016040528060008152506108f0565b505050565b600061062882610ee6565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610696576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b6060600380546106f6906117e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610722906117e8565b801561076f5780601f106107445761010080835404028352916020019161076f565b820191906000526020600020905b81548152906001019060200180831161075257829003601f168201915b5050505050905090565b610781610af4565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107e5576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600760006107f2610af4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661089f610af4565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516108e491906112aa565b60405180910390a35050565b6108fb848484610b01565b60008373ffffffffffffffffffffffffffffffffffffffff163b1461095d5761092684848484610fb2565b61095c576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b606061096e82610a95565b6109a4576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109ae611102565b905060008151036109ce57604051806020016040528060008152506109f9565b806109d884611119565b6040516020016109e9929190611855565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610aa0610afc565b11158015610aaf575060005482105b8015610aed575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b6000610b0c82610ee6565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b73576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006006600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008573ffffffffffffffffffffffffffffffffffffffff16610bcc610af4565b73ffffffffffffffffffffffffffffffffffffffff161480610bfb5750610bfa86610bf5610af4565b610a01565b5b80610c385750610c09610af4565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b905080610c71576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610cd7576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ce48686866001611173565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610d2257610d2184611179565b5b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905550610df085610dcc888887611195565b7c0200000000000000000000000000000000000000000000000000000000176111bc565b600460008681526020019081526020016000208190555060007c0200000000000000000000000000000000000000000000000000000000841603610e765760006001850190506000600460008381526020019081526020016000205403610e74576000548114610e73578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610ede86868660016111e7565b505050505050565b60008082905080610ef5610afc565b11610f7b57600054811015610f7a5760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603610f78575b60008103610f6e576004600083600190039350838152602001908152602001600020549050610f44565b8092505050610fad565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fd8610af4565b8786866040518563ffffffff1660e01b8152600401610ffa94939291906118ce565b6020604051808303816000875af192505050801561103657506040513d601f19601f82011682018060405250810190611033919061192f565b60015b6110af573d8060008114611066576040519150601f19603f3d011682016040523d82523d6000602084013e61106b565b606091505b5060008151036110a7576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606080604051019050806040528082600183039250600a81066030018353600a810490505b801561115f57600183039250600a81066030018353600a8104905061113f565b508181036020830392508083525050919050565b50505050565b6000600690508160005280602052604060002060008155505050565b6000808260e81c905060e86111ab8686846111ed565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61123f8161120a565b811461124a57600080fd5b50565b60008135905061125c81611236565b92915050565b60006020828403121561127857611277611200565b5b60006112868482850161124d565b91505092915050565b60008115159050919050565b6112a48161128f565b82525050565b60006020820190506112bf600083018461129b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112ff5780820151818401526020810190506112e4565b8381111561130e576000848401525b50505050565b6000601f19601f8301169050919050565b6000611330826112c5565b61133a81856112d0565b935061134a8185602086016112e1565b61135381611314565b840191505092915050565b600060208201905081810360008301526113788184611325565b905092915050565b6000819050919050565b61139381611380565b811461139e57600080fd5b50565b6000813590506113b08161138a565b92915050565b6000602082840312156113cc576113cb611200565b5b60006113da848285016113a1565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061140e826113e3565b9050919050565b61141e81611403565b82525050565b60006020820190506114396000830184611415565b92915050565b61144881611403565b811461145357600080fd5b50565b6000813590506114658161143f565b92915050565b6000806040838503121561148257611481611200565b5b600061149085828601611456565b92505060206114a1858286016113a1565b9150509250929050565b6114b481611380565b82525050565b60006020820190506114cf60008301846114ab565b92915050565b6000806000606084860312156114ee576114ed611200565b5b60006114fc86828701611456565b935050602061150d86828701611456565b925050604061151e868287016113a1565b9150509250925092565b60006020828403121561153e5761153d611200565b5b600061154c84828501611456565b91505092915050565b61155e8161128f565b811461156957600080fd5b50565b60008135905061157b81611555565b92915050565b6000806040838503121561159857611597611200565b5b60006115a685828601611456565b92505060206115b78582860161156c565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61160382611314565b810181811067ffffffffffffffff82111715611622576116216115cb565b5b80604052505050565b60006116356111f6565b905061164182826115fa565b919050565b600067ffffffffffffffff821115611661576116606115cb565b5b61166a82611314565b9050602081019050919050565b82818337600083830152505050565b600061169961169484611646565b61162b565b9050828152602081018484840111156116b5576116b46115c6565b5b6116c0848285611677565b509392505050565b600082601f8301126116dd576116dc6115c1565b5b81356116ed848260208601611686565b91505092915050565b600080600080608085870312156117105761170f611200565b5b600061171e87828801611456565b945050602061172f87828801611456565b9350506040611740878288016113a1565b925050606085013567ffffffffffffffff81111561176157611760611205565b5b61176d878288016116c8565b91505092959194509250565b600080604083850312156117905761178f611200565b5b600061179e85828601611456565b92505060206117af85828601611456565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061180057607f821691505b602082108103611813576118126117b9565b5b50919050565b600081905092915050565b600061182f826112c5565b6118398185611819565b93506118498185602086016112e1565b80840191505092915050565b60006118618285611824565b915061186d8284611824565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b60006118a082611879565b6118aa8185611884565b93506118ba8185602086016112e1565b6118c381611314565b840191505092915050565b60006080820190506118e36000830187611415565b6118f06020830186611415565b6118fd60408301856114ab565b818103606083015261190f8184611895565b905095945050505050565b60008151905061192981611236565b92915050565b60006020828403121561194557611944611200565b5b60006119538482850161191a565b9150509291505056fea264697066735822122072a6b60d377467fde4a287f7ab811e2a83163dc433c6dbfd45bc6f220fe5bbd464736f6c634300080f0033";

type ERC721AConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721A__factory extends ContractFactory {
  constructor(...args: ERC721AConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC721A";
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721A> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721A>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ERC721A {
    return super.attach(address) as ERC721A;
  }
  connect(signer: Signer): ERC721A__factory {
    return super.connect(signer) as ERC721A__factory;
  }
  static readonly contractName: "ERC721A";
  public readonly contractName: "ERC721A";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AInterface {
    return new utils.Interface(_abi) as ERC721AInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721A {
    return new Contract(address, _abi, signerOrProvider) as ERC721A;
  }
}
