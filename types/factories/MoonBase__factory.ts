/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MoonBase, MoonBaseInterface } from "../MoonBase";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mlz",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotClaim",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTokenOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "UpdatedCurrentClaimId",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "last",
        type: "uint256",
      },
    ],
    name: "UpdatedLastId",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mlzId",
        type: "uint256",
      },
    ],
    name: "canClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentClaimId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batches",
        type: "uint256",
      },
    ],
    name: "mintBatches",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mlz",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "updateCurrentClaimId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "updateLastId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "withdrawNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600160025561058a6003553480156200001c57600080fd5b50604051620012c5380380620012c583398181016040528101906200004291906200018d565b6200006262000056620000aa60201b60201c565b620000b260201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000212565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200018781620001f8565b92915050565b600060208284031215620001a657620001a5620001f3565b5b6000620001b68482850162000176565b91505092915050565b6000620001cc82620001d3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200020381620001bf565b81146200020f57600080fd5b50565b6110a380620002226000396000f3fe6080604052600436106100ab5760003560e01c80638da5cb5b116100645780638da5cb5b1461019f578063b6d0c57a146101ca578063b841be23146101f3578063c95c0d891461021c578063f2fde38b14610259578063f3fef3a314610282576100b2565b8063023245d7146100b757806302f843db146100e057806336d2c732146101095780636ba4c13814610134578063715018a61461015d57806372806c5a14610174576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100de60048036038101906100d99190610c2d565b6102ab565b005b3480156100ec57600080fd5b5061010760048036038101906101029190610c2d565b610347565b005b34801561011557600080fd5b5061011e610390565b60405161012b9190610d28565b60405180910390f35b34801561014057600080fd5b5061015b60048036038101906101569190610be0565b6103b6565b005b34801561016957600080fd5b50610172610647565b005b34801561018057600080fd5b5061018961065b565b6040516101969190610df5565b60405180910390f35b3480156101ab57600080fd5b506101b4610661565b6040516101c19190610d28565b60405180910390f35b3480156101d657600080fd5b506101f160048036038101906101ec9190610c2d565b61068a565b005b3480156101ff57600080fd5b5061021a60048036038101906102159190610c2d565b6106d3565b005b34801561022857600080fd5b50610243600480360381019061023e9190610c2d565b6107f1565b6040516102509190610d7a565b60405180910390f35b34801561026557600080fd5b50610280600480360381019061027b9190610b46565b61082a565b005b34801561028e57600080fd5b506102a960048036038101906102a49190610ba0565b6108ae565b005b6102b3610967565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161031293929190610d43565b600060405180830381600087803b15801561032c57600080fd5b505af1158015610340573d6000803e3d6000fd5b5050505050565b61034f610967565b806003819055507f4e2e0d1b27e207bf51c333e310e76412db0f35e8df85426b19ec62f3fb811a26816040516103859190610df5565b60405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008282905090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060005b828110156105f057600085858381811061040557610404610f53565b5b905060200201359050610417816107f1565b61044d576040517fe3e3d24200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161049d9190610df5565b60206040518083038186803b1580156104b557600080fd5b505afa1580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed9190610b73565b73ffffffffffffffffffffffffffffffffffffffff161461053a576040517f59dc379f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016004600083815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3033856002546105929190610e2c565b6040518463ffffffff1660e01b81526004016105b093929190610d43565b600060405180830381600087803b1580156105ca57600080fd5b505af11580156105de573d6000803e3d6000fd5b505050508180600101925050506103e8565b5081600260008282546106039190610e2c565b925050819055507f7a355715549cfe7c1cba26304350343fbddc4b4f72d3ce3e7c27117dd20b5cb8826040516106399190610df5565b60405180910390a150505050565b61064f610967565b61065960006109e5565b565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610692610967565b806002819055507f5852b707642c723001e41ce9d61b1db6f6432cc4dd53290126004a4d40c93598816040516106c89190610df5565b60405180910390a150565b6106db610967565b6000670138a388a43c000060036106f29190610e82565b9050600081836107029190610e82565b90508047101561073e576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060005b848110156107ea578173ffffffffffffffffffffffffffffffffffffffff16638ca887ca8560036040518363ffffffff1660e01b81526004016107ab9190610df5565b6000604051808303818588803b1580156107c457600080fd5b505af11580156107d8573d6000803e3d6000fd5b50505050508080600101915050610768565b5050505050565b6000600354821115801561082357506004600083815260200190815260200160002060009054906101000a900460ff16155b9050919050565b610832610967565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089990610d95565b60405180910390fd5b6108ab816109e5565b50565b6108b6610967565b60008273ffffffffffffffffffffffffffffffffffffffff16826040516108dc90610d13565b60006040518083038185875af1925050503d8060008114610919576040519150601f19603f3d011682016040523d82523d6000602084013e61091e565b606091505b5050905080610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095990610dd5565b60405180910390fd5b505050565b61096f610aa9565b73ffffffffffffffffffffffffffffffffffffffff1661098d610661565b73ffffffffffffffffffffffffffffffffffffffff16146109e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109da90610db5565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600081359050610ac08161103f565b92915050565b600081519050610ad58161103f565b92915050565b60008083601f840112610af157610af0610f87565b5b8235905067ffffffffffffffff811115610b0e57610b0d610f82565b5b602083019150836020820283011115610b2a57610b29610f8c565b5b9250929050565b600081359050610b4081611056565b92915050565b600060208284031215610b5c57610b5b610f96565b5b6000610b6a84828501610ab1565b91505092915050565b600060208284031215610b8957610b88610f96565b5b6000610b9784828501610ac6565b91505092915050565b60008060408385031215610bb757610bb6610f96565b5b6000610bc585828601610ab1565b9250506020610bd685828601610b31565b9150509250929050565b60008060208385031215610bf757610bf6610f96565b5b600083013567ffffffffffffffff811115610c1557610c14610f91565b5b610c2185828601610adb565b92509250509250929050565b600060208284031215610c4357610c42610f96565b5b6000610c5184828501610b31565b91505092915050565b610c6381610edc565b82525050565b610c7281610eee565b82525050565b6000610c85602683610e1b565b9150610c9082610f9b565b604082019050919050565b6000610ca8602083610e1b565b9150610cb382610fea565b602082019050919050565b6000610ccb600083610e10565b9150610cd682611013565b600082019050919050565b6000610cee601083610e1b565b9150610cf982611016565b602082019050919050565b610d0d81610f1a565b82525050565b6000610d1e82610cbe565b9150819050919050565b6000602082019050610d3d6000830184610c5a565b92915050565b6000606082019050610d586000830186610c5a565b610d656020830185610c5a565b610d726040830184610d04565b949350505050565b6000602082019050610d8f6000830184610c69565b92915050565b60006020820190508181036000830152610dae81610c78565b9050919050565b60006020820190508181036000830152610dce81610c9b565b9050919050565b60006020820190508181036000830152610dee81610ce1565b9050919050565b6000602082019050610e0a6000830184610d04565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610e3782610f1a565b9150610e4283610f1a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e7757610e76610f24565b5b828201905092915050565b6000610e8d82610f1a565b9150610e9883610f1a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ed157610ed0610f24565b5b828202905092915050565b6000610ee782610efa565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b50565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b61104881610edc565b811461105357600080fd5b50565b61105f81610f1a565b811461106a57600080fd5b5056fea26469706673582212200ffe79bc58c554ba0e29796d27e53729e35c99204d78fb9623bda59580cea55764736f6c63430008070033";

type MoonBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MoonBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MoonBase__factory extends ContractFactory {
  constructor(...args: MoonBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MoonBase";
  }

  deploy(
    _mlz: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MoonBase> {
    return super.deploy(_mlz, overrides || {}) as Promise<MoonBase>;
  }
  getDeployTransaction(
    _mlz: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_mlz, overrides || {});
  }
  attach(address: string): MoonBase {
    return super.attach(address) as MoonBase;
  }
  connect(signer: Signer): MoonBase__factory {
    return super.connect(signer) as MoonBase__factory;
  }
  static readonly contractName: "MoonBase";
  public readonly contractName: "MoonBase";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MoonBaseInterface {
    return new utils.Interface(_abi) as MoonBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MoonBase {
    return new Contract(address, _abi, signerOrProvider) as MoonBase;
  }
}
