/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WithdrawFairly,
  WithdrawFairlyInterface,
} from "../WithdrawFairly";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isSalePart",
        type: "bool",
      },
    ],
    name: "SharedETHPart",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isSalePart",
        type: "bool",
      },
    ],
    name: "SharedTokenPart",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "callers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "parts",
    outputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "salesPart",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "royaltiesPart",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isSalePart",
        type: "bool",
      },
    ],
    name: "shareETHPart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isSalePart",
        type: "bool",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "shareTokenPart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600060405180606001604052807392010d29227ebe9a7625ac398310a7bb3030ecbe73ffffffffffffffffffffffffffffffffffffffff1681526020016103e861ffff1681526020016103e861ffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548161ffff021916908361ffff16021790555060408201518160000160166101000a81548161ffff021916908361ffff160217905550505060006040518060600160405280600173ffffffffffffffffffffffffffffffffffffffff1681526020016107d061ffff1681526020016107d061ffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548161ffff021916908361ffff16021790555060408201518160000160166101000a81548161ffff021916908361ffff160217905550505060006040518060600160405280600273ffffffffffffffffffffffffffffffffffffffff168152602001610af061ffff168152602001610af061ffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548161ffff021916908361ffff16021790555060408201518160000160166101000a81548161ffff021916908361ffff160217905550505060006040518060600160405280600373ffffffffffffffffffffffffffffffffffffffff16815260200161087c61ffff16815260200161087c61ffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548161ffff021916908361ffff16021790555060408201518160000160166101000a81548161ffff021916908361ffff160217905550505060006040518060600160405280600473ffffffffffffffffffffffffffffffffffffffff1681526020016107ec61ffff1681526020016107ec61ffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548161ffff021916908361ffff16021790555060408201518160000160166101000a81548161ffff021916908361ffff1602179055505050600180600073ecb4278af1379c38eab140063ffc426f05fede2873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610dfd806105626000396000f3fe6080604052600436106100425760003560e01c8062da68431461004e5780637bbf4a3f146100775780638469b4ca146100b4578063c9eb4662146100dd57610049565b3661004957005b600080fd5b34801561005a57600080fd5b50610075600480360381019061007091906109aa565b61011c565b005b34801561008357600080fd5b5061009e60048036038101906100999190610a35565b61039e565b6040516100ab9190610a71565b60405180910390f35b3480156100c057600080fd5b506100db60048036038101906100d69190610a8c565b6103be565b005b3480156100e957600080fd5b5061010460048036038101906100ff9190610b02565b610814565b60405161011393929190610b5b565b60405180910390f35b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661019f576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000479050600081036101de576040517f669567ea00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054905090506101ef61092e565b60005b82811015610360576000818154811061020e5761020d610b92565b5b906000526020600020016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900461ffff1661ffff1661ffff1681526020016000820160169054906101000a900461ffff1661ffff1661ffff16815250509150841580156102d157506000826040015161ffff16115b15610309576103048260000151612710846040015161ffff16876102f59190610bf0565b6102ff9190610c79565b610886565b610353565b84801561031e57506000826020015161ffff16115b15610352576103518260000151612710846020015161ffff16876103429190610bf0565b61034c9190610c79565b610886565b5b5b80806001019150506101f2565b507f99f9443690a771f1118bcd01ba439a1330f64ccda66ba2430067bbe86955c955846040516103909190610a71565b60405180910390a150505050565b60016020528060005260406000206000915054906101000a900460ff1681565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610441576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104819190610caa565b602060405180830381865afa15801561049e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c29190610cda565b9050600081036104fe576040517f669567ea00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080549050905061050f61092e565b60005b828110156107d4576000818154811061052e5761052d610b92565b5b906000526020600020016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900461ffff1661ffff1661ffff1681526020016000820160169054906101000a900461ffff1661ffff1661ffff16815250509150861580156105f157506000826040015161ffff16115b156106d3578473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8360000151612710856040015161ffff168861062e9190610bf0565b6106389190610c79565b6040518363ffffffff1660e01b8152600401610655929190610d16565b6020604051808303816000875af1158015610674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106989190610d54565b6106ce576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107c7565b8680156106e857506000826020015161ffff16115b156107c6578473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8360000151612710856040015161ffff16886107259190610bf0565b61072f9190610c79565b6040518363ffffffff1660e01b815260040161074c929190610d16565b6020604051808303816000875af115801561076b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078f9190610d54565b6107c5576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b8080600101915050610512565b507f63e992a31337ec76b9145198ad6b277971d1821cc3140cc7339bbc7a32677973866040516108049190610a71565b60405180910390a1505050505050565b6000818154811061082457600080fd5b906000526020600020016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900461ffff16908060000160169054906101000a900461ffff16905083565b60008273ffffffffffffffffffffffffffffffffffffffff16826040516108ac90610db2565b60006040518083038185875af1925050503d80600081146108e9576040519150601f19603f3d011682016040523d82523d6000602084013e6108ee565b606091505b5050905080610929576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600061ffff168152602001600061ffff1681525090565b600080fd5b60008115159050919050565b61098781610972565b811461099257600080fd5b50565b6000813590506109a48161097e565b92915050565b6000602082840312156109c0576109bf61096d565b5b60006109ce84828501610995565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a02826109d7565b9050919050565b610a12816109f7565b8114610a1d57600080fd5b50565b600081359050610a2f81610a09565b92915050565b600060208284031215610a4b57610a4a61096d565b5b6000610a5984828501610a20565b91505092915050565b610a6b81610972565b82525050565b6000602082019050610a866000830184610a62565b92915050565b60008060408385031215610aa357610aa261096d565b5b6000610ab185828601610995565b9250506020610ac285828601610a20565b9150509250929050565b6000819050919050565b610adf81610acc565b8114610aea57600080fd5b50565b600081359050610afc81610ad6565b92915050565b600060208284031215610b1857610b1761096d565b5b6000610b2684828501610aed565b91505092915050565b610b38816109f7565b82525050565b600061ffff82169050919050565b610b5581610b3e565b82525050565b6000606082019050610b706000830186610b2f565b610b7d6020830185610b4c565b610b8a6040830184610b4c565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bfb82610acc565b9150610c0683610acc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c3f57610c3e610bc1565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c8482610acc565b9150610c8f83610acc565b925082610c9f57610c9e610c4a565b5b828204905092915050565b6000602082019050610cbf6000830184610b2f565b92915050565b600081519050610cd481610ad6565b92915050565b600060208284031215610cf057610cef61096d565b5b6000610cfe84828501610cc5565b91505092915050565b610d1081610acc565b82525050565b6000604082019050610d2b6000830185610b2f565b610d386020830184610d07565b9392505050565b600081519050610d4e8161097e565b92915050565b600060208284031215610d6a57610d6961096d565b5b6000610d7884828501610d3f565b91505092915050565b600081905092915050565b50565b6000610d9c600083610d81565b9150610da782610d8c565b600082019050919050565b6000610dbd82610d8f565b915081905091905056fea2646970667358221220db08fac0142868318d7568c25c321bab020783520a864f65c95db91268efbf1764736f6c634300080f0033";

type WithdrawFairlyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawFairlyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawFairly__factory extends ContractFactory {
  constructor(...args: WithdrawFairlyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "WithdrawFairly";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WithdrawFairly> {
    return super.deploy(overrides || {}) as Promise<WithdrawFairly>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WithdrawFairly {
    return super.attach(address) as WithdrawFairly;
  }
  connect(signer: Signer): WithdrawFairly__factory {
    return super.connect(signer) as WithdrawFairly__factory;
  }
  static readonly contractName: "WithdrawFairly";
  public readonly contractName: "WithdrawFairly";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawFairlyInterface {
    return new utils.Interface(_abi) as WithdrawFairlyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawFairly {
    return new Contract(address, _abi, signerOrProvider) as WithdrawFairly;
  }
}
