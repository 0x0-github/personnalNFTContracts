/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WithdrawFairly,
  WithdrawFairlyInterface,
} from "../WithdrawFairly";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "callers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "parts",
    outputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltiesPart",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shareETHRoyaltiesPart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "shareTokenRoyaltiesPart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "";

type WithdrawFairlyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawFairlyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawFairly__factory extends ContractFactory {
  constructor(...args: WithdrawFairlyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "WithdrawFairly";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WithdrawFairly> {
    return super.deploy(overrides || {}) as Promise<WithdrawFairly>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WithdrawFairly {
    return super.attach(address) as WithdrawFairly;
  }
  connect(signer: Signer): WithdrawFairly__factory {
    return super.connect(signer) as WithdrawFairly__factory;
  }
  static readonly contractName: "WithdrawFairly";
  public readonly contractName: "WithdrawFairly";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawFairlyInterface {
    return new utils.Interface(_abi) as WithdrawFairlyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawFairly {
    return new Contract(address, _abi, signerOrProvider) as WithdrawFairly;
  }
}
