/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ERC721ExtraData,
  ERC721ExtraDataInterface,
} from "../ERC721ExtraData";

const _abi = [
  {
    inputs: [],
    name: "AmountGreaterThanMax",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotClearMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotIncreaseMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotUnfreezeURI",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotUpdateFrozenURI",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectETHValue",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxPresaleMintsReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSaleMintsReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MintPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPresaleTime",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSaleTime",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "SoldOut",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "BaseURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "conf",
        type: "uint256",
      },
    ],
    name: "ConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "MerkleRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "UnrevealURIUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mintPaused",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "frozenURI",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "presaleStart",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "presaleEnd",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxSupply",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "presalePrice",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "salePrice",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "maxMintTx",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "maxMintPresale",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "maxMintSale",
            type: "uint8",
          },
        ],
        internalType: "struct ERC721ExtraData.Data",
        name: "",
        type: "tuple",
      },
    ],
    name: "extraDataToUint256",
    outputs: [
      {
        internalType: "uint256",
        name: "packedData",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getExtraData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mintPaused",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "frozenURI",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "presaleStart",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "presaleEnd",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxSupply",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "presalePrice",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "salePrice",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "maxMintTx",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "maxMintPresale",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "maxMintSale",
            type: "uint8",
          },
        ],
        internalType: "struct ERC721ExtraData.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "presaleMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "saleMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "next",
        type: "uint256",
      },
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setUnrevealURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unrevealURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ERC721ExtraData__factory {
  static readonly abi = _abi;
  static createInterface(): ERC721ExtraDataInterface {
    return new utils.Interface(_abi) as ERC721ExtraDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721ExtraData {
    return new Contract(address, _abi, signerOrProvider) as ERC721ExtraData;
  }
}
